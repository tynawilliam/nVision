{"version":3,"file":"index.umd.js","sources":["../src/index.ts"],"sourcesContent":["import React, { EffectCallback, DependencyList } from 'react';\n\nfunction useMountEffect(effect: EffectCallback) {\n  React.useEffect(effect, []);\n}\n\nfunction useIsJustMountedState(): boolean {\n  const isJustMounted = React.useRef(true);\n\n  if (isJustMounted.current) {\n    isJustMounted.current = false;\n\n    return true;\n  }\n\n  return isJustMounted.current;\n}\n\nfunction useUpdateOnlyEffect(\n  effect: EffectCallback,\n  dependencies?: DependencyList\n) {\n  const isJustMounted = useIsJustMountedState();\n\n  React.useEffect(() => {\n    if (!isJustMounted) {\n      return effect();\n    }\n  }, dependencies);\n}\n\nfunction useForceUpdate() {\n  const triggerUpdate = React.useState({})[1];\n\n  return React.useCallback(() => {\n    triggerUpdate({});\n  }, []);\n}\n\n// typescript has issues with unique symbol type for Set and Record\n// this is a work around\nconst uniqueSymbol: unique symbol = Symbol('_');\ntype UniqueSymbol = typeof uniqueSymbol;\n\nexport type Selector<State, StateSlice> = (state: State) => StateSlice;\nexport type EqualityCheck<StateSlice> = (\n  prevSlice: StateSlice,\n  nextSlice: StateSlice\n) => boolean;\ninterface Listener<State, StateSlice> {\n  triggerUpdate: ReturnType<typeof useForceUpdate>;\n  prevSlice: StateSlice;\n  selector: Selector<State, StateSlice>;\n  equalityCheck: EqualityCheck<StateSlice>;\n}\ntype Listeners<State, StateSlice> = Record<\n  UniqueSymbol,\n  Listener<State, StateSlice>\n>;\nexport type StateUpdaterCallback<State> = (prevState: State) => State;\nexport type SetState<State> = (\n  arg: StateUpdaterCallback<State> | State\n) => void;\nexport type GetState<State> = () => State;\n\ntype StateTypes =\n  | Record<string | number | symbol, unknown>\n  | string\n  | number\n  | boolean\n  | undefined\n  | null;\n\ninterface UseStore<State extends StateTypes | Array<StateTypes>> {\n  (\n    selector?: Selector<State, State>,\n    equalityCheck?: EqualityCheck<State>\n  ): State;\n  <StateSlice>(\n    selector?: Selector<State, StateSlice>,\n    equalityCheck?: EqualityCheck<StateSlice>\n  ): StateSlice;\n  set: SetState<State>;\n  get: GetState<State>;\n}\n\nexport function createStore<State extends StateTypes | Array<StateTypes>>(\n  initialState: State | (() => State)\n): UseStore<State> {\n  const listenerKeys = new Set<UniqueSymbol>();\n  let listeners: Listeners<State, unknown> = {} as Listeners<State, unknown>;\n\n  const store = {\n    state: typeof initialState === 'function' ? initialState() : initialState,\n    getState(): State {\n      return this.state;\n    },\n  };\n\n  function updater(arg: StateUpdaterCallback<State> | State): void {\n    let newState: State;\n    if (typeof arg === 'function') {\n      newState = arg(store.state);\n    } else {\n      newState = arg;\n    }\n\n    store.state = newState;\n\n    listenerKeys.forEach((key: UniqueSymbol) => {\n      const listener = listeners[key];\n\n      const nextSlice = listener.selector(store.state);\n\n      if (!listener.equalityCheck(listener.prevSlice, nextSlice)) {\n        listener.triggerUpdate();\n      }\n    });\n  }\n\n  const defaultSelector: Selector<State, State> = (state) => state;\n  const defaultEqualityCheck: EqualityCheck<State> = (prevSlice, nextSlice) =>\n    prevSlice === nextSlice;\n\n  const useStore = (\n    selector = defaultSelector,\n    equalityCheck = defaultEqualityCheck\n  ) => {\n    const state = store.getState();\n    const currentSlice = selector(state);\n\n    const listenerKeyRef = React.useRef(Symbol('listener'));\n\n    const triggerUpdate = useForceUpdate();\n\n    useMountEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listenerKeys.add(listenerKey as UniqueSymbol);\n      listeners[listenerKey] = {\n        triggerUpdate,\n        prevSlice: currentSlice,\n        selector,\n        equalityCheck,\n      };\n\n      if (!equalityCheck(currentSlice, selector(store.getState()))) {\n        triggerUpdate();\n      }\n\n      return () => {\n        listenerKeys.delete(listenerKey as UniqueSymbol);\n        delete listeners[listenerKey];\n      };\n    });\n\n    useUpdateOnlyEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listeners[listenerKey].selector = selector;\n    }, [selector]);\n\n    useUpdateOnlyEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listeners[listenerKey].equalityCheck = equalityCheck;\n\n      if (!equalityCheck(currentSlice, selector(store.getState()))) {\n        triggerUpdate();\n      }\n    }, [equalityCheck]);\n\n    useUpdateOnlyEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listeners[listenerKey].prevSlice = currentSlice;\n    });\n\n    return currentSlice;\n  };\n\n  useStore.set = updater;\n  useStore.get = store.getState.bind(store) as GetState<State>;\n\n  return useStore;\n}\n"],"names":["useMountEffect","effect","React","useEffect","useIsJustMountedState","isJustMounted","useRef","current","useUpdateOnlyEffect","dependencies","useForceUpdate","triggerUpdate","useState","useCallback","createStore","initialState","listenerKeys","Set","listeners","store","state","getState","updater","arg","newState","forEach","key","listener","nextSlice","selector","equalityCheck","prevSlice","defaultSelector","defaultEqualityCheck","useStore","currentSlice","listenerKeyRef","Symbol","listenerKey","add","set","get","bind"],"mappings":"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"}