{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import React, { EffectCallback, DependencyList } from 'react';\n\nfunction useMountEffect(effect: EffectCallback) {\n  React.useEffect(effect, []);\n}\n\nfunction useIsJustMountedState(): boolean {\n  const isJustMounted = React.useRef(true);\n\n  if (isJustMounted.current) {\n    isJustMounted.current = false;\n\n    return true;\n  }\n\n  return isJustMounted.current;\n}\n\nfunction useUpdateOnlyEffect(\n  effect: EffectCallback,\n  dependencies?: DependencyList\n) {\n  const isJustMounted = useIsJustMountedState();\n\n  React.useEffect(() => {\n    if (!isJustMounted) {\n      return effect();\n    }\n  }, dependencies);\n}\n\nfunction useForceUpdate() {\n  const triggerUpdate = React.useState({})[1];\n\n  return React.useCallback(() => {\n    triggerUpdate({});\n  }, []);\n}\n\n// typescript has issues with unique symbol type for Set and Record\n// this is a work around\nconst uniqueSymbol: unique symbol = Symbol('_');\ntype UniqueSymbol = typeof uniqueSymbol;\n\nexport type Selector<State, StateSlice> = (state: State) => StateSlice;\nexport type EqualityCheck<StateSlice> = (\n  prevSlice: StateSlice,\n  nextSlice: StateSlice\n) => boolean;\ninterface Listener<State, StateSlice> {\n  triggerUpdate: ReturnType<typeof useForceUpdate>;\n  prevSlice: StateSlice;\n  selector: Selector<State, StateSlice>;\n  equalityCheck: EqualityCheck<StateSlice>;\n}\ntype Listeners<State, StateSlice> = Record<\n  UniqueSymbol,\n  Listener<State, StateSlice>\n>;\nexport type StateUpdaterCallback<State> = (prevState: State) => State;\nexport type SetState<State> = (\n  arg: StateUpdaterCallback<State> | State\n) => void;\nexport type GetState<State> = () => State;\n\ntype StateTypes =\n  | Record<string | number | symbol, unknown>\n  | string\n  | number\n  | boolean\n  | undefined\n  | null;\n\ninterface UseStore<State extends StateTypes | Array<StateTypes>> {\n  (\n    selector?: Selector<State, State>,\n    equalityCheck?: EqualityCheck<State>\n  ): State;\n  <StateSlice>(\n    selector?: Selector<State, StateSlice>,\n    equalityCheck?: EqualityCheck<StateSlice>\n  ): StateSlice;\n  set: SetState<State>;\n  get: GetState<State>;\n}\n\nexport function createStore<State extends StateTypes | Array<StateTypes>>(\n  initialState: State | (() => State)\n): UseStore<State> {\n  const listenerKeys = new Set<UniqueSymbol>();\n  let listeners: Listeners<State, unknown> = {} as Listeners<State, unknown>;\n\n  const store = {\n    state: typeof initialState === 'function' ? initialState() : initialState,\n    getState(): State {\n      return this.state;\n    },\n  };\n\n  function updater(arg: StateUpdaterCallback<State> | State): void {\n    let newState: State;\n    if (typeof arg === 'function') {\n      newState = arg(store.state);\n    } else {\n      newState = arg;\n    }\n\n    store.state = newState;\n\n    listenerKeys.forEach((key: UniqueSymbol) => {\n      const listener = listeners[key];\n\n      const nextSlice = listener.selector(store.state);\n\n      if (!listener.equalityCheck(listener.prevSlice, nextSlice)) {\n        listener.triggerUpdate();\n      }\n    });\n  }\n\n  const defaultSelector: Selector<State, State> = (state) => state;\n  const defaultEqualityCheck: EqualityCheck<State> = (prevSlice, nextSlice) =>\n    prevSlice === nextSlice;\n\n  const useStore = (\n    selector = defaultSelector,\n    equalityCheck = defaultEqualityCheck\n  ) => {\n    const state = store.getState();\n    const currentSlice = selector(state);\n\n    const listenerKeyRef = React.useRef(Symbol('listener'));\n\n    const triggerUpdate = useForceUpdate();\n\n    useMountEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listenerKeys.add(listenerKey as UniqueSymbol);\n      listeners[listenerKey] = {\n        triggerUpdate,\n        prevSlice: currentSlice,\n        selector,\n        equalityCheck,\n      };\n\n      if (!equalityCheck(currentSlice, selector(store.getState()))) {\n        triggerUpdate();\n      }\n\n      return () => {\n        listenerKeys.delete(listenerKey as UniqueSymbol);\n        delete listeners[listenerKey];\n      };\n    });\n\n    useUpdateOnlyEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listeners[listenerKey].selector = selector;\n    }, [selector]);\n\n    useUpdateOnlyEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listeners[listenerKey].equalityCheck = equalityCheck;\n\n      if (!equalityCheck(currentSlice, selector(store.getState()))) {\n        triggerUpdate();\n      }\n    }, [equalityCheck]);\n\n    useUpdateOnlyEffect(() => {\n      const listenerKey = listenerKeyRef.current;\n      listeners[listenerKey].prevSlice = currentSlice;\n    });\n\n    return currentSlice;\n  };\n\n  useStore.set = updater;\n  useStore.get = store.getState.bind(store) as GetState<State>;\n\n  return useStore;\n}\n"],"names":["useMountEffect","effect","React","useEffect","useIsJustMountedState","isJustMounted","useRef","current","useUpdateOnlyEffect","dependencies","useForceUpdate","triggerUpdate","useState","useCallback","createStore","initialState","listenerKeys","Set","listeners","store","state","getState","updater","arg","newState","forEach","key","listener","nextSlice","selector","equalityCheck","prevSlice","defaultSelector","defaultEqualityCheck","useStore","currentSlice","listenerKeyRef","Symbol","listenerKey","add","delete","set","get","bind"],"mappings":";;AAEA,SAASA,cAAT,CAAwBC,MAAxB;AACEC,EAAAA,KAAK,CAACC,SAAN,CAAgBF,MAAhB,EAAwB,EAAxB;AACD;;AAED,SAASG,qBAAT;AACE,QAAMC,aAAa,GAAGH,KAAK,CAACI,MAAN,CAAa,IAAb,CAAtB;;AAEA,MAAID,aAAa,CAACE,OAAlB,EAA2B;AACzBF,IAAAA,aAAa,CAACE,OAAd,GAAwB,KAAxB;AAEA,WAAO,IAAP;AACD;;AAED,SAAOF,aAAa,CAACE,OAArB;AACD;;AAED,SAASC,mBAAT,CACEP,MADF,EAEEQ,YAFF;AAIE,QAAMJ,aAAa,GAAGD,qBAAqB,EAA3C;AAEAF,EAAAA,KAAK,CAACC,SAAN,CAAgB;AACd,QAAI,CAACE,aAAL,EAAoB;AAClB,aAAOJ,MAAM,EAAb;AACD;AACF,GAJD,EAIGQ,YAJH;AAKD;;AAED,SAASC,cAAT;AACE,QAAMC,aAAa,GAAGT,KAAK,CAACU,QAAN,CAAe,EAAf,EAAmB,CAAnB,CAAtB;AAEA,SAAOV,KAAK,CAACW,WAAN,CAAkB;AACvBF,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAFM,EAEJ,EAFI,CAAP;AAGD;SAiDeG,YACdC;AAEA,QAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACA,MAAIC,SAAS,GAA8B,EAA3C;AAEA,QAAMC,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAE,OAAOL,YAAP,KAAwB,UAAxB,GAAqCA,YAAY,EAAjD,GAAsDA,YADjD;;AAEZM,IAAAA,QAAQ;AACN,aAAO,KAAKD,KAAZ;AACD;;AAJW,GAAd;;AAOA,WAASE,OAAT,CAAiBC,GAAjB;AACE,QAAIC,QAAJ;;AACA,QAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;AAC7BC,MAAAA,QAAQ,GAAGD,GAAG,CAACJ,KAAK,CAACC,KAAP,CAAd;AACD,KAFD,MAEO;AACLI,MAAAA,QAAQ,GAAGD,GAAX;AACD;;AAEDJ,IAAAA,KAAK,CAACC,KAAN,GAAcI,QAAd;AAEAR,IAAAA,YAAY,CAACS,OAAb,CAAsBC,GAAD;AACnB,YAAMC,QAAQ,GAAGT,SAAS,CAACQ,GAAD,CAA1B;AAEA,YAAME,SAAS,GAAGD,QAAQ,CAACE,QAAT,CAAkBV,KAAK,CAACC,KAAxB,CAAlB;;AAEA,UAAI,CAACO,QAAQ,CAACG,aAAT,CAAuBH,QAAQ,CAACI,SAAhC,EAA2CH,SAA3C,CAAL,EAA4D;AAC1DD,QAAAA,QAAQ,CAAChB,aAAT;AACD;AACF,KARD;AASD;;AAED,QAAMqB,eAAe,GAA4BZ,KAAD,IAAWA,KAA3D;;AACA,QAAMa,oBAAoB,GAAyB,CAACF,SAAD,EAAYH,SAAZ,KACjDG,SAAS,KAAKH,SADhB;;AAGA,QAAMM,QAAQ,GAAG,CACfL,QAAQ,GAAGG,eADI,EAEfF,aAAa,GAAGG,oBAFD;AAIf,UAAMb,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAd;AACA,UAAMc,YAAY,GAAGN,QAAQ,CAACT,KAAD,CAA7B;AAEA,UAAMgB,cAAc,GAAGlC,KAAK,CAACI,MAAN,CAAa+B,MAAM,CAAC,UAAD,CAAnB,CAAvB;AAEA,UAAM1B,aAAa,GAAGD,cAAc,EAApC;AAEAV,IAAAA,cAAc,CAAC;AACb,YAAMsC,WAAW,GAAGF,cAAc,CAAC7B,OAAnC;AACAS,MAAAA,YAAY,CAACuB,GAAb,CAAiBD,WAAjB;AACApB,MAAAA,SAAS,CAACoB,WAAD,CAAT,GAAyB;AACvB3B,QAAAA,aADuB;AAEvBoB,QAAAA,SAAS,EAAEI,YAFY;AAGvBN,QAAAA,QAHuB;AAIvBC,QAAAA;AAJuB,OAAzB;;AAOA,UAAI,CAACA,aAAa,CAACK,YAAD,EAAeN,QAAQ,CAACV,KAAK,CAACE,QAAN,EAAD,CAAvB,CAAlB,EAA8D;AAC5DV,QAAAA,aAAa;AACd;;AAED,aAAO;AACLK,QAAAA,YAAY,CAACwB,MAAb,CAAoBF,WAApB;AACA,eAAOpB,SAAS,CAACoB,WAAD,CAAhB;AACD,OAHD;AAID,KAlBa,CAAd;AAoBA9B,IAAAA,mBAAmB,CAAC;AAClB,YAAM8B,WAAW,GAAGF,cAAc,CAAC7B,OAAnC;AACAW,MAAAA,SAAS,CAACoB,WAAD,CAAT,CAAuBT,QAAvB,GAAkCA,QAAlC;AACD,KAHkB,EAGhB,CAACA,QAAD,CAHgB,CAAnB;AAKArB,IAAAA,mBAAmB,CAAC;AAClB,YAAM8B,WAAW,GAAGF,cAAc,CAAC7B,OAAnC;AACAW,MAAAA,SAAS,CAACoB,WAAD,CAAT,CAAuBR,aAAvB,GAAuCA,aAAvC;;AAEA,UAAI,CAACA,aAAa,CAACK,YAAD,EAAeN,QAAQ,CAACV,KAAK,CAACE,QAAN,EAAD,CAAvB,CAAlB,EAA8D;AAC5DV,QAAAA,aAAa;AACd;AACF,KAPkB,EAOhB,CAACmB,aAAD,CAPgB,CAAnB;AASAtB,IAAAA,mBAAmB,CAAC;AAClB,YAAM8B,WAAW,GAAGF,cAAc,CAAC7B,OAAnC;AACAW,MAAAA,SAAS,CAACoB,WAAD,CAAT,CAAuBP,SAAvB,GAAmCI,YAAnC;AACD,KAHkB,CAAnB;AAKA,WAAOA,YAAP;AACD,GAnDD;;AAqDAD,EAAAA,QAAQ,CAACO,GAAT,GAAenB,OAAf;AACAY,EAAAA,QAAQ,CAACQ,GAAT,GAAevB,KAAK,CAACE,QAAN,CAAesB,IAAf,CAAoBxB,KAApB,CAAf;AAEA,SAAOe,QAAP;AACD;;;;"}